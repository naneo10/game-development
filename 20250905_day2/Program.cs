namespace _20250905_day02
{

    /*************************************************************
    [변수(Variable)] 
     - 데이터를 저장하기 위해 프로그램에 의해 이름을 할당받은 메모리공간
     - 데이터를 저장할수 있는 메모리 공간을 의미하며, 저장된 값은 변경 가능
     - 일종의 데이터를 담아 놓을 그릇을 만드는 작업이다 라고 볼수 있다.
     

    [변수 이름의 규칙]
    - 변수이름은 영문자, 숫자, 밑줄(_)로 구성
    - 변수 이름은 숫자로 시작할수 없음
    - 변수 이름은 대소문자를 구분함
    - 변수 이름은 예약어(키워드)를 사용할수 없다.(int, using, public, static, void...등등등)
    - 변수 이름은 공백을 포함할수 없음
    - 변수 이름은 의미 있는 이름을 사용하여 가독성을 높이는 것이 좋음
    - 변수 이름은 길이에 제한이 없지만, 너무 길게 작성하지 않는 것이 좋음
    - 변수 이름은 한글로 선언해도 상관없지만 여러 개발자가 프로그램을 분석하고 사용하는 상황에서는 
      공통언어인 영어를 사용하는 것이 좋음



      [네이밍 컨벤션] -> 이름 규칙
      //가독성과 협업효율에 큰 영향을 줌
      
     [PascalCase]
     - 단어마다 첫 글자를 대문자로 씀
     - Player, GameManager
     - 주로 클래스나 메서드 이름에 사용

     [camelCase]
     - 첫 단어는 소문자, 이후 단어 첫글자만 대문자
     - gameManager
     - 변수나, 매개변수에 사용

     [snake_case]비얌 케이스
     -  모든 글자를 소문자로 쓰고 단어사이를 언더스코어로 구분(_)

     [SCREAMINGSNAKECASE]대문자 비얌 케이스
     - 비얌 케이스랑 같지만 모두 대문자
     - MAX_HP, PI
     - 상수에 사용(Constant)

    [헝가리안 표기법]
    - 예전에 많이 쓰이는 변수이름 짓는 방식
    - 변수명 앞에 자료형 역할을 접두사로 붙여주는 방식  

    iCount, iNumber, bIsJump

     ***********************************************************/


    internal class Program
    {
        static void Main(string[] args)
        {
            //[변수 선언 및 초기화]
            //자료형을 선언하고 빈칸 뒤에 변수이름을 작성하여 변수 선언

            //1.변수선언과 동시에 초기화
            int number = 10;

            number = 20;
            //2.변수선언 후 초기화
            int count;  //선언하고
            count = 1;  //초기화

            //3.여러 변수 동시
            int a = 10, b = 20;

            //선언만 해보고
            int c;

            Console.WriteLine("int형 변수 number에 저장된 데이터 :" + number);

            Console.WriteLine($"변수 count에 저장된 데이터 {count}");

            Console.WriteLine(count);
            // Console.WriteLine(c); //초기화가 되지 않은 변수는 사용할수 없다!!!!

            //같은 이름의 변수는 error
            // int number = 1;

            /*****************************************************
             상수
             - 프로그램이 실행되는 동안 변경할수 없는 데이터
             - 프로그램에서 값이 변경되기를 원하지 않는 데이터가 있을경우
             - 저장된 값은 프로그램 종료시까지 변경 불가능
             - 반드시 선언과 동시에 초기화 해야하며 이후에는 값을 변경할수가 없다.
            
             *****************************************************/
            //상수 선언 및 초기화
            //변수 선언 앞에 const  키워드를 추가하여 상수선언
            const int MAX = 200;
            //MAX = 10; error ->상수의 데이터 변경불가
            Console.WriteLine($"MAX 상수에 저장된 데이터 : {MAX}");
            //const int MIN;//error->상수는 초기화 없이 사용이 불가


            int a1 = 1;
            int b2;
            b2 = a1;


            Console.WriteLine(a1);
            Console.WriteLine(b2);



        }
    }
}
